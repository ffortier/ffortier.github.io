load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template")
load("@aspect_bazel_lib//lib:run_binary.bzl", "run_binary")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@pip//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_binary")
load(":config.bzl", "DISK_SIZE", "SECTOR_SIZE", "TOTAL_SECTORS")

expand_template(
    name = "qemu_init",
    out = "qemu_init.sh",
    data = [
        ":x86",
    ],
    is_executable = True,
    substitutions = {
        "{QEMU}": "qemu-system-x86_64",
        "{BIN}": "$(rootpath :x86)",
    },
    template = [
        "#!/bin/sh",
        "cp {BIN} a.bin",
        "chmod +w a.bin",
        "{QEMU} -drive file=a.bin,format=raw,index=0,media=disk $@",
    ],
)

sh_binary(
    name = "qemu",
    srcs = [":qemu_init"],
    data = [
        ":x86",
    ],
    tags = ["manual"],
)

sh_binary(
    name = "qemu_curses",
    srcs = [":qemu_init"],
    args = [
        "-serial",
        "mon:stdio",
        "-display",
        "curses",
    ],
    data = [
        ":x86",
    ],
    tags = ["manual"],
)

write_file(
    name = "bash",
    out = "bash.sh",
    content = ["bash"],
    is_executable = True,
)

sh_binary(
    name = "clang",
    srcs = [":bash"],
    data = [
        "@llvm_toolchain//:linker-files-x86_32-linux",
        "@llvm_toolchain//:objcopy-files-x86_32-linux",
    ],
    tags = ["manual"],
)

py_binary(
    name = "bundle",
    srcs = ["bundle.py"],
    deps = [
        requirement("fs"),
        requirement("pyfatfs"),
    ],
)

run_binary(
    name = "x86",
    srcs = [
        "//os/boot",
        "//os/fs",
        "//os/kernel:x86",
    ],
    outs = ["os_x86.bin"],
    args = [
        "-b",
        "$(location //os/boot)",
        "-k",
        "$(location //os/kernel:x86)",
        "-o",
        "$(location os_x86.bin)",
        "--sector_size",
        "%s" % SECTOR_SIZE,
        "--kernel_total_sectors",
        "%s" % TOTAL_SECTORS,
        "--disk_size",
        "%s" % DISK_SIZE,
        "--fs_root",
        "%s/fs" % package_name(),
    ],
    tool = ":bundle",
)
